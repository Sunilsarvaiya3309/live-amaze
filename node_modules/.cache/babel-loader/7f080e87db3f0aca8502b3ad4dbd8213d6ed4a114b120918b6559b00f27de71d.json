{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_resolveDynamicComponent($setup.iconComponent), {\n    class: _normalizeClass([[$props.className, `text-[${$props.stroke}]`], \"inline-block\"]),\n    fill: $props.fill || 'none',\n    stroke: $props.stroke,\n    thin: $props.thin\n  }, null, 8 /* PROPS */, [\"class\", \"fill\", \"stroke\", \"thin\"]);\n}","map":{"version":3,"names":["_createBlock","_resolveDynamicComponent","$setup","iconComponent","class","_normalizeClass","$props","className","stroke","fill","thin"],"sources":["C:\\projects\\Amaze Web\\src\\components\\BaseIcon.vue"],"sourcesContent":["<script setup>\r\nimport { computed, defineProps } from \"vue\";\r\nimport { CloseIcon, MenuIcon } from \"@/components/Icons/index\";\r\n\r\nconst icons = { menuIcon: MenuIcon, closeIcon: CloseIcon };\r\n\r\nconst props = defineProps({\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  className: {\r\n    type: String,\r\n    default: \"none\",\r\n  },\r\n  fill: {\r\n    type: String,\r\n  },\r\n  stroke: {\r\n    type: String,\r\n    default: \"black\",\r\n  },\r\n  thin: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  size: {\r\n    type: String, //large | medium | small\r\n    default: \"medium\",\r\n  },\r\n});\r\n\r\nconst iconComponent = computed(() => {\r\n  return icons[props.name];\r\n});\r\n\r\n</script>\r\n<template>\r\n  <component\r\n    :class=\"[className, `text-[${stroke}]`]\"\r\n    :is=\"iconComponent\"\r\n    class=\"inline-block\"\r\n    :fill=\"fill || 'none'\"\r\n    :stroke=\"stroke\"\r\n    :thin=\"thin\"\r\n  />\r\n</template>\r\n"],"mappings":";;uBAsCEA,YAAA,CAOEC,wBAAA,CALKC,MAAA,CAAAC,aAAa;IADjBC,KAAK,EAAAC,eAAA,GAAGC,MAAA,CAAAC,SAAS,WAAWD,MAAA,CAAAE,MAAM,MAE7B,cAAc;IACnBC,IAAI,EAAEH,MAAA,CAAAG,IAAI;IACVD,MAAM,EAAEF,MAAA,CAAAE,MAAM;IACdE,IAAI,EAAEJ,MAAA,CAAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}