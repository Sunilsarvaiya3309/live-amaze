{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, resolveComponent as _resolveComponent, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, Suspense as _Suspense, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex-grow\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createBlock(_Suspense, null, {\n    default: _withCtx(() => [$setup.splashVisible ? (_openBlock(), _createBlock($setup[\"SplashScreen\"], {\n      key: 0\n    })) : (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: _normalizeClass(['min-h-screen flex flex-col transition-colors duration-700 ease-in-out', $setup.isDark ? 'bg-zinc-900 text-white' : 'bg-white text-black'])\n    }, [_createVNode($setup[\"AnimatedCursor\"]), _createVNode($setup[\"GlobalHeader\"]), _createElementVNode(\"main\", _hoisted_1, [_createVNode(_component_router_view), _createVNode($setup[\"ScrollToTop\"])]), _createVNode($setup[\"GlobalFooter\"])], 2 /* CLASS */))]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_Suspense","$setup","splashVisible","key","_createElementBlock","_normalizeClass","isDark","_createVNode","_createElementVNode","_hoisted_1","_component_router_view"],"sources":["C:\\projects\\Amaze Web\\src\\App.vue"],"sourcesContent":["<script setup>\r\nimport GlobalHeader from \"@/components/HeaderComponent.vue\";\r\nimport GlobalFooter from \"@/components/FooterComponent.vue\";\r\nimport ScrollToTop from \"@/components/ScrollToTop.vue\";\r\nimport SplashScreen from \"@/components/SplashScreen.vue\";\r\nimport { useDarkMode } from \"@/composables/useDarkMode\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport AnimatedCursor from \"./components/AnimatedCursor.vue\";\r\n\r\nconst { isDark } = useDarkMode();\r\nconst splashVisible = ref(true);\r\n\r\nonMounted(() => {\r\n  // Allow the splash screen to complete its animation\r\n  setTimeout(() => {\r\n    splashVisible.value = false;\r\n  }, 5000); // Match with SplashScreen animation timing\r\n});\r\n</script>\r\n\r\n<template>\r\n  <Suspense>\r\n    <SplashScreen v-if=\"splashVisible\" />\r\n\r\n    <div\r\n      v-else\r\n      :class=\"[\r\n        'min-h-screen flex flex-col transition-colors duration-700 ease-in-out',\r\n        isDark ? 'bg-zinc-900 text-white' : 'bg-white text-black',\r\n      ]\"\r\n    >\r\n      <AnimatedCursor />\r\n      <GlobalHeader />\r\n      <main class=\"flex-grow\">\r\n        <router-view />\r\n        <ScrollToTop />\r\n      </main>\r\n      <GlobalFooter />\r\n    </div>\r\n  </Suspense>\r\n</template>\r\n<style>\r\n/* Global scrollbar styles */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n  height: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #000000; /* black background */\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: #ffd500; /* yellow thumb */\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Firefox support */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #ffd500 #000000;\r\n}\r\n</style>\r\n"],"mappings":";;EAiCYA,KAAK,EAAC;AAAW;;;uBAZ3BC,YAAA,CAkBWC,SAAA;sBAjBT,MAAqC,CAAjBC,MAAA,CAAAC,aAAa,I,cAAjCH,YAAA,CAAqCE,MAAA;MAAAE,GAAA;IAAA,O,cAErCC,mBAAA,CAcM;;MAZHN,KAAK,EAAAO,eAAA,E,yEAA+FJ,MAAA,CAAAK,MAAM,oD;QAK3GC,YAAA,CAAkBN,MAAA,qBAClBM,YAAA,CAAgBN,MAAA,mBAChBO,mBAAA,CAGO,QAHPC,UAGO,GAFLF,YAAA,CAAeG,sBAAA,GACfH,YAAA,CAAeN,MAAA,iB,GAEjBM,YAAA,CAAgBN,MAAA,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}