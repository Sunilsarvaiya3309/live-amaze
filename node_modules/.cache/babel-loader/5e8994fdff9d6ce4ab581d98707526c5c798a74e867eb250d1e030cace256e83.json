{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"fixed inset-0 z-50 bg-black flex items-center justify-center\"\n};\nconst _hoisted_2 = {\n  class: \"w-full h-auto text-center\",\n  viewBox: \"-7 0 398 65\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  stroke: \"yellow\",\n  \"stroke-width\": \"2\",\n  fill: \"black\"\n};\nimport { ref, onMounted } from \"vue\";\nimport { gsap } from \"gsap\";\nexport default {\n  __name: 'SplashScreen',\n  setup(__props) {\n    const pathEl = ref(null);\n    const visible = ref(true);\n    const leftCurtain = ref(null);\n    const rightCurtain = ref(null);\n    onMounted(() => {\n      const path = pathEl.value;\n\n      // Ensure the path and splash exist\n      if (!path) return;\n\n      // Prepare stroke drawing\n      const length = path.getTotalLength();\n      gsap.set(path, {\n        strokeDasharray: length,\n        strokeDashoffset: length,\n        opacity: 0.1\n      });\n      const tl = gsap.timeline({\n        defaults: {\n          ease: \"power4.inOut\"\n        }\n      });\n      // Animate stroke draw\n      // Step 1: Curtain animations\n      tl.to(leftCurtain.value, {\n        x: \"-100%\",\n        duration: 2.5\n      }).to(rightCurtain.value, {\n        x: \"100%\",\n        duration: 2.5\n      }, \"<\" // run both curtains at the same time\n      )\n      // Step 2: Stroke draw animation (after curtains complete)\n      .to(path, {\n        strokeDashoffset: 0,\n        duration: 5,\n        delay: -1.9,\n        opacity: 1,\n        ease: \"power2.inOut\",\n        onComplete: () => {\n          // Step 3: Hide splash screen only after path draw is complete\n          visible.value = false;\n        }\n      });\n    });\n    return (_ctx, _cache) => {\n      return visible.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_2, [_createElementVNode(\"path\", {\n        ref_key: \"pathEl\",\n        ref: pathEl,\n        d: \"M0 48.12L0 45.83Q0.71 45.83 1.93 45.40Q3.15 44.97 4.61 44.07Q6.08 43.14 7.67 41.71Q9.25 40.28 10.72 38.21L25.90 16.60L50.54 16.60L63.84 37.67Q65.23 39.87 66.87 41.42Q68.51 42.97 70.12 43.95Q71.70 44.92 73.11 45.37Q74.51 45.83 75.46 45.83L75.46 48.12L28.56 48.12L28.56 45.83Q30.05 45.83 31.41 45.29Q32.76 44.75 33.62 43.68Q34.47 42.60 34.47 41.02Q34.47 40.48 34.23 39.67L14.77 39.67Q14.55 40.26 14.55 40.80Q14.55 42.43 15.42 43.55Q16.28 44.68 17.64 45.25Q18.99 45.83 20.48 45.83L20.48 48.12L0 48.12M16.55 36.28L32.76 36.28Q32.25 35.30 31.57 34.02Q30.88 32.74 29.96 31.10Q29.03 29.47 27.87 27.44Q26.71 25.42 25.24 22.92Q23.58 25.44 22.22 27.49Q20.85 29.54 19.78 31.20Q18.73 32.84 17.92 34.08Q17.11 35.33 16.55 36.28ZM111.45 49.00L94.04 27.42L94.04 31.81Q94.04 32.76 94.07 33.68Q94.09 34.59 94.14 35.47Q94.21 37.23 94.56 38.76Q94.90 40.28 95.58 41.55Q96.22 42.77 97.39 43.73Q98.54 44.63 100.24 45.19Q101.95 45.75 104.39 45.83L104.39 48.12L78.52 48.12L78.52 45.83Q83.40 45.65 86.13 44.35Q88.87 43.04 89.98 40.04Q91.09 37.04 91.09 31.81Q91.09 27.81 90.34 25.28Q89.60 22.75 88.01 21.34Q86.45 19.90 84.00 19.40Q81.54 18.90 78.17 18.90L78.17 16.60L114.11 16.60L122.27 25.98L127.98 16.60L163.72 16.60L163.72 18.90Q160.38 18.90 157.98 19.42Q155.59 19.95 154.09 21.34Q152.59 22.73 151.88 25.26Q151.17 27.78 151.17 31.81Q151.17 37.08 152.28 40.09Q153.39 43.09 156.13 44.37Q158.86 45.65 163.72 45.83L163.72 48.12L117.63 48.12L117.63 45.83Q120.09 45.75 121.78 45.21Q123.51 44.68 124.65 43.75Q125.78 42.82 126.46 41.55Q127.51 39.58 127.75 37.06Q127.98 34.55 127.98 31.81L127.98 22.61L111.45 49.00ZM166.77 48.12L166.77 45.83Q167.48 45.83 168.70 45.40Q169.92 44.97 171.39 44.07Q172.85 43.14 174.44 41.71Q176.03 40.28 177.49 38.21L192.68 16.60L217.31 16.60L230.62 37.67Q232.01 39.87 233.64 41.42Q235.28 42.97 236.89 43.95Q238.48 44.92 239.88 45.37Q241.28 45.83 242.24 45.83L242.24 48.12L195.34 48.12L195.34 45.83Q196.83 45.83 198.18 45.29Q199.54 44.75 200.39 43.68Q201.25 42.60 201.25 41.02Q201.25 40.48 201.00 39.67L181.54 39.67Q181.32 40.26 181.32 40.80Q181.32 42.43 182.19 43.55Q183.06 44.68 184.41 45.25Q185.77 45.83 187.26 45.83L187.26 48.12L166.77 48.12M183.33 36.28L199.54 36.28Q199.02 35.30 198.34 34.02Q197.66 32.74 196.73 31.10Q195.80 29.47 194.64 27.44Q193.48 25.42 192.02 22.92Q190.36 25.44 188.99 27.49Q187.62 29.54 186.55 31.20Q185.50 32.84 184.69 34.08Q183.89 35.33 183.33 36.28ZM245.17 48.12L245.17 45.48Q246.68 45.48 248.44 44.35Q250.20 43.21 252.93 40.50Q253.91 39.58 255.07 38.37Q256.23 37.16 257.59 35.69Q260.30 32.76 263.98 28.70Q267.65 24.63 272.53 19.17Q270.36 19.19 268.43 19.23Q266.50 19.26 264.84 19.36Q261.50 19.53 259.02 19.92Q256.54 20.31 254.86 21.02Q253.20 21.70 252.12 22.80Q251.10 23.88 250.65 25.40Q250.20 26.93 250.20 28.98L249.83 28.98L249.02 29.00L247.85 29.00L247.85 16.60L308.11 16.60L308.11 18.90Q306.49 18.90 304.90 20.12Q303.30 21.34 300.88 23.95Q299.12 25.88 296.57 28.82Q294.02 31.76 290.45 35.84Q288.67 37.87 286.56 40.25Q284.45 42.63 282.01 45.36Q288.50 45.29 293.07 44.89Q297.63 44.48 300.48 43.48Q303.32 42.48 304.63 40.61Q305.93 38.75 305.93 35.74L307.08 35.74L308.20 35.72L308.20 48.12L245.17 48.12ZM312.23 48.12L312.23 45.83Q317.11 45.65 319.85 44.35Q322.58 43.04 323.69 40.04Q324.80 37.04 324.80 31.81Q324.80 27.95 324.13 25.38Q323.46 22.80 321.90 21.34Q320.87 20.41 319.48 19.87Q318.09 19.34 316.28 19.12Q314.48 18.90 312.23 18.90L312.23 16.60L380.42 16.60Q381.05 19.68 381.36 23.29Q381.67 26.90 381.67 29.83L379.10 29.83Q377.47 27.39 374.32 25.39Q371.17 23.39 367.16 21.97Q363.16 20.53 358.79 19.78Q354.42 19.02 350.20 19.02L350.20 31.37Q351.56 30.98 353.86 30.05Q356.15 29.13 358.86 27.88Q361.55 26.64 363.43 25.68Q365.31 24.73 365.89 24.32Q366.31 26.15 366.43 28.58Q366.55 31.01 366.55 32.84Q366.55 34.59 366.39 36.88Q366.24 39.16 365.89 40.67Q365.26 40.28 363.31 39.29Q361.35 38.31 358.76 37.11Q356.30 35.99 353.97 35.01Q351.64 34.03 350.20 33.64L350.20 45.70Q354.30 45.70 359.23 44.86Q364.16 44.02 368.95 42.53Q372.00 41.55 374.63 40.34Q377.27 39.14 379.15 37.74Q381.03 36.35 381.79 34.89L384.35 34.89Q384.35 37.82 384.05 41.43Q383.74 45.04 383.11 48.12L312.23 48.12Z\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      }, null, 512)])), _createElementVNode(\"div\", {\n        ref_key: \"leftCurtain\",\n        ref: leftCurtain,\n        class: \"absolute left-0 top-0 h-full w-1/2 bg-yellow-500 z-[100]\"\n      }, null, 512), _createElementVNode(\"div\", {\n        ref_key: \"rightCurtain\",\n        ref: rightCurtain,\n        class: \"absolute right-0 top-0 h-full w-1/2 bg-yellow-500 z-[100]\"\n      }, null, 512)])) : _createCommentVNode(\"\", true);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","gsap","pathEl","visible","leftCurtain","rightCurtain","path","value","length","getTotalLength","set","strokeDasharray","strokeDashoffset","opacity","tl","timeline","defaults","ease","to","x","duration","delay","onComplete","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","d","class"],"sources":["C:/projects/Amaze Web/src/components/SplashScreen.vue","C:\\projects\\Amaze Web\\src\\components\\SplashScreen.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { gsap } from \"gsap\";\r\n\r\nconst pathEl = ref(null);\r\nconst visible = ref(true);\r\nconst leftCurtain = ref(null);\r\nconst rightCurtain = ref(null);\r\n\r\nonMounted(() => {\r\n  const path = pathEl.value;\r\n\r\n  // Ensure the path and splash exist\r\n  if (!path) return;\r\n\r\n  // Prepare stroke drawing\r\n  const length = path.getTotalLength();\r\n  gsap.set(path, {\r\n    strokeDasharray: length,\r\n    strokeDashoffset: length,\r\n    opacity: 0.1,\r\n  });\r\n\r\n  const tl = gsap.timeline({\r\n    defaults: { ease: \"power4.inOut\" },\r\n  });\r\n  // Animate stroke draw\r\n  // Step 1: Curtain animations\r\n  tl.to(leftCurtain.value, {\r\n    x: \"-100%\",\r\n    duration: 2.5,\r\n  })\r\n    .to(\r\n      rightCurtain.value,\r\n      {\r\n        x: \"100%\",\r\n        duration: 2.5,\r\n      },\r\n      \"<\" // run both curtains at the same time\r\n    )\r\n    // Step 2: Stroke draw animation (after curtains complete)\r\n    .to(path, {\r\n      strokeDashoffset: 0,\r\n      duration: 5,\r\n      delay: -1.9,\r\n      opacity: 1,\r\n      ease: \"power2.inOut\",\r\n      onComplete: () => {\r\n        // Step 3: Hide splash screen only after path draw is complete\r\n        visible.value = false;\r\n      },\r\n    });\r\n});\r\n</script>\r\n<template>\r\n  <div\r\n    v-if=\"visible\"\r\n    class=\"fixed inset-0 z-50 bg-black flex items-center justify-center\"\r\n  >\r\n    <svg\r\n      class=\"w-full h-auto text-center\"\r\n      viewBox=\"-7 0 398 65\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke=\"yellow\"\r\n      stroke-width=\"2\"\r\n      fill=\"black\"\r\n    >\r\n      <!-- SVG Path converted from \"AMAZE.\" -->\r\n      <path\r\n        ref=\"pathEl\"\r\n        d=\"M0 48.12L0 45.83Q0.71 45.83 1.93 45.40Q3.15 44.97 4.61 44.07Q6.08 43.14 7.67 41.71Q9.25 40.28 10.72 38.21L25.90 16.60L50.54 16.60L63.84 37.67Q65.23 39.87 66.87 41.42Q68.51 42.97 70.12 43.95Q71.70 44.92 73.11 45.37Q74.51 45.83 75.46 45.83L75.46 48.12L28.56 48.12L28.56 45.83Q30.05 45.83 31.41 45.29Q32.76 44.75 33.62 43.68Q34.47 42.60 34.47 41.02Q34.47 40.48 34.23 39.67L14.77 39.67Q14.55 40.26 14.55 40.80Q14.55 42.43 15.42 43.55Q16.28 44.68 17.64 45.25Q18.99 45.83 20.48 45.83L20.48 48.12L0 48.12M16.55 36.28L32.76 36.28Q32.25 35.30 31.57 34.02Q30.88 32.74 29.96 31.10Q29.03 29.47 27.87 27.44Q26.71 25.42 25.24 22.92Q23.58 25.44 22.22 27.49Q20.85 29.54 19.78 31.20Q18.73 32.84 17.92 34.08Q17.11 35.33 16.55 36.28ZM111.45 49.00L94.04 27.42L94.04 31.81Q94.04 32.76 94.07 33.68Q94.09 34.59 94.14 35.47Q94.21 37.23 94.56 38.76Q94.90 40.28 95.58 41.55Q96.22 42.77 97.39 43.73Q98.54 44.63 100.24 45.19Q101.95 45.75 104.39 45.83L104.39 48.12L78.52 48.12L78.52 45.83Q83.40 45.65 86.13 44.35Q88.87 43.04 89.98 40.04Q91.09 37.04 91.09 31.81Q91.09 27.81 90.34 25.28Q89.60 22.75 88.01 21.34Q86.45 19.90 84.00 19.40Q81.54 18.90 78.17 18.90L78.17 16.60L114.11 16.60L122.27 25.98L127.98 16.60L163.72 16.60L163.72 18.90Q160.38 18.90 157.98 19.42Q155.59 19.95 154.09 21.34Q152.59 22.73 151.88 25.26Q151.17 27.78 151.17 31.81Q151.17 37.08 152.28 40.09Q153.39 43.09 156.13 44.37Q158.86 45.65 163.72 45.83L163.72 48.12L117.63 48.12L117.63 45.83Q120.09 45.75 121.78 45.21Q123.51 44.68 124.65 43.75Q125.78 42.82 126.46 41.55Q127.51 39.58 127.75 37.06Q127.98 34.55 127.98 31.81L127.98 22.61L111.45 49.00ZM166.77 48.12L166.77 45.83Q167.48 45.83 168.70 45.40Q169.92 44.97 171.39 44.07Q172.85 43.14 174.44 41.71Q176.03 40.28 177.49 38.21L192.68 16.60L217.31 16.60L230.62 37.67Q232.01 39.87 233.64 41.42Q235.28 42.97 236.89 43.95Q238.48 44.92 239.88 45.37Q241.28 45.83 242.24 45.83L242.24 48.12L195.34 48.12L195.34 45.83Q196.83 45.83 198.18 45.29Q199.54 44.75 200.39 43.68Q201.25 42.60 201.25 41.02Q201.25 40.48 201.00 39.67L181.54 39.67Q181.32 40.26 181.32 40.80Q181.32 42.43 182.19 43.55Q183.06 44.68 184.41 45.25Q185.77 45.83 187.26 45.83L187.26 48.12L166.77 48.12M183.33 36.28L199.54 36.28Q199.02 35.30 198.34 34.02Q197.66 32.74 196.73 31.10Q195.80 29.47 194.64 27.44Q193.48 25.42 192.02 22.92Q190.36 25.44 188.99 27.49Q187.62 29.54 186.55 31.20Q185.50 32.84 184.69 34.08Q183.89 35.33 183.33 36.28ZM245.17 48.12L245.17 45.48Q246.68 45.48 248.44 44.35Q250.20 43.21 252.93 40.50Q253.91 39.58 255.07 38.37Q256.23 37.16 257.59 35.69Q260.30 32.76 263.98 28.70Q267.65 24.63 272.53 19.17Q270.36 19.19 268.43 19.23Q266.50 19.26 264.84 19.36Q261.50 19.53 259.02 19.92Q256.54 20.31 254.86 21.02Q253.20 21.70 252.12 22.80Q251.10 23.88 250.65 25.40Q250.20 26.93 250.20 28.98L249.83 28.98L249.02 29.00L247.85 29.00L247.85 16.60L308.11 16.60L308.11 18.90Q306.49 18.90 304.90 20.12Q303.30 21.34 300.88 23.95Q299.12 25.88 296.57 28.82Q294.02 31.76 290.45 35.84Q288.67 37.87 286.56 40.25Q284.45 42.63 282.01 45.36Q288.50 45.29 293.07 44.89Q297.63 44.48 300.48 43.48Q303.32 42.48 304.63 40.61Q305.93 38.75 305.93 35.74L307.08 35.74L308.20 35.72L308.20 48.12L245.17 48.12ZM312.23 48.12L312.23 45.83Q317.11 45.65 319.85 44.35Q322.58 43.04 323.69 40.04Q324.80 37.04 324.80 31.81Q324.80 27.95 324.13 25.38Q323.46 22.80 321.90 21.34Q320.87 20.41 319.48 19.87Q318.09 19.34 316.28 19.12Q314.48 18.90 312.23 18.90L312.23 16.60L380.42 16.60Q381.05 19.68 381.36 23.29Q381.67 26.90 381.67 29.83L379.10 29.83Q377.47 27.39 374.32 25.39Q371.17 23.39 367.16 21.97Q363.16 20.53 358.79 19.78Q354.42 19.02 350.20 19.02L350.20 31.37Q351.56 30.98 353.86 30.05Q356.15 29.13 358.86 27.88Q361.55 26.64 363.43 25.68Q365.31 24.73 365.89 24.32Q366.31 26.15 366.43 28.58Q366.55 31.01 366.55 32.84Q366.55 34.59 366.39 36.88Q366.24 39.16 365.89 40.67Q365.26 40.28 363.31 39.29Q361.35 38.31 358.76 37.11Q356.30 35.99 353.97 35.01Q351.64 34.03 350.20 33.64L350.20 45.70Q354.30 45.70 359.23 44.86Q364.16 44.02 368.95 42.53Q372.00 41.55 374.63 40.34Q377.27 39.14 379.15 37.74Q381.03 36.35 381.79 34.89L384.35 34.89Q384.35 37.82 384.05 41.43Q383.74 45.04 383.11 48.12L312.23 48.12Z\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n    </svg>\r\n    <div\r\n      ref=\"leftCurtain\"\r\n      class=\"absolute left-0 top-0 h-full w-1/2 bg-yellow-500 z-[100]\"\r\n    ></div>\r\n    <div\r\n      ref=\"rightCurtain\"\r\n      class=\"absolute right-0 top-0 h-full w-1/2 bg-yellow-500 z-[100]\"\r\n    ></div>\r\n  </div>\r\n</template>\r\n","<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { gsap } from \"gsap\";\r\n\r\nconst pathEl = ref(null);\r\nconst visible = ref(true);\r\nconst leftCurtain = ref(null);\r\nconst rightCurtain = ref(null);\r\n\r\nonMounted(() => {\r\n  const path = pathEl.value;\r\n\r\n  // Ensure the path and splash exist\r\n  if (!path) return;\r\n\r\n  // Prepare stroke drawing\r\n  const length = path.getTotalLength();\r\n  gsap.set(path, {\r\n    strokeDasharray: length,\r\n    strokeDashoffset: length,\r\n    opacity: 0.1,\r\n  });\r\n\r\n  const tl = gsap.timeline({\r\n    defaults: { ease: \"power4.inOut\" },\r\n  });\r\n  // Animate stroke draw\r\n  // Step 1: Curtain animations\r\n  tl.to(leftCurtain.value, {\r\n    x: \"-100%\",\r\n    duration: 2.5,\r\n  })\r\n    .to(\r\n      rightCurtain.value,\r\n      {\r\n        x: \"100%\",\r\n        duration: 2.5,\r\n      },\r\n      \"<\" // run both curtains at the same time\r\n    )\r\n    // Step 2: Stroke draw animation (after curtains complete)\r\n    .to(path, {\r\n      strokeDashoffset: 0,\r\n      duration: 5,\r\n      delay: -1.9,\r\n      opacity: 1,\r\n      ease: \"power2.inOut\",\r\n      onComplete: () => {\r\n        // Step 3: Hide splash screen only after path draw is complete\r\n        visible.value = false;\r\n      },\r\n    });\r\n});\r\n</script>\r\n<template>\r\n  <div\r\n    v-if=\"visible\"\r\n    class=\"fixed inset-0 z-50 bg-black flex items-center justify-center\"\r\n  >\r\n    <svg\r\n      class=\"w-full h-auto text-center\"\r\n      viewBox=\"-7 0 398 65\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke=\"yellow\"\r\n      stroke-width=\"2\"\r\n      fill=\"black\"\r\n    >\r\n      <!-- SVG Path converted from \"AMAZE.\" -->\r\n      <path\r\n        ref=\"pathEl\"\r\n        d=\"M0 48.12L0 45.83Q0.71 45.83 1.93 45.40Q3.15 44.97 4.61 44.07Q6.08 43.14 7.67 41.71Q9.25 40.28 10.72 38.21L25.90 16.60L50.54 16.60L63.84 37.67Q65.23 39.87 66.87 41.42Q68.51 42.97 70.12 43.95Q71.70 44.92 73.11 45.37Q74.51 45.83 75.46 45.83L75.46 48.12L28.56 48.12L28.56 45.83Q30.05 45.83 31.41 45.29Q32.76 44.75 33.62 43.68Q34.47 42.60 34.47 41.02Q34.47 40.48 34.23 39.67L14.77 39.67Q14.55 40.26 14.55 40.80Q14.55 42.43 15.42 43.55Q16.28 44.68 17.64 45.25Q18.99 45.83 20.48 45.83L20.48 48.12L0 48.12M16.55 36.28L32.76 36.28Q32.25 35.30 31.57 34.02Q30.88 32.74 29.96 31.10Q29.03 29.47 27.87 27.44Q26.71 25.42 25.24 22.92Q23.58 25.44 22.22 27.49Q20.85 29.54 19.78 31.20Q18.73 32.84 17.92 34.08Q17.11 35.33 16.55 36.28ZM111.45 49.00L94.04 27.42L94.04 31.81Q94.04 32.76 94.07 33.68Q94.09 34.59 94.14 35.47Q94.21 37.23 94.56 38.76Q94.90 40.28 95.58 41.55Q96.22 42.77 97.39 43.73Q98.54 44.63 100.24 45.19Q101.95 45.75 104.39 45.83L104.39 48.12L78.52 48.12L78.52 45.83Q83.40 45.65 86.13 44.35Q88.87 43.04 89.98 40.04Q91.09 37.04 91.09 31.81Q91.09 27.81 90.34 25.28Q89.60 22.75 88.01 21.34Q86.45 19.90 84.00 19.40Q81.54 18.90 78.17 18.90L78.17 16.60L114.11 16.60L122.27 25.98L127.98 16.60L163.72 16.60L163.72 18.90Q160.38 18.90 157.98 19.42Q155.59 19.95 154.09 21.34Q152.59 22.73 151.88 25.26Q151.17 27.78 151.17 31.81Q151.17 37.08 152.28 40.09Q153.39 43.09 156.13 44.37Q158.86 45.65 163.72 45.83L163.72 48.12L117.63 48.12L117.63 45.83Q120.09 45.75 121.78 45.21Q123.51 44.68 124.65 43.75Q125.78 42.82 126.46 41.55Q127.51 39.58 127.75 37.06Q127.98 34.55 127.98 31.81L127.98 22.61L111.45 49.00ZM166.77 48.12L166.77 45.83Q167.48 45.83 168.70 45.40Q169.92 44.97 171.39 44.07Q172.85 43.14 174.44 41.71Q176.03 40.28 177.49 38.21L192.68 16.60L217.31 16.60L230.62 37.67Q232.01 39.87 233.64 41.42Q235.28 42.97 236.89 43.95Q238.48 44.92 239.88 45.37Q241.28 45.83 242.24 45.83L242.24 48.12L195.34 48.12L195.34 45.83Q196.83 45.83 198.18 45.29Q199.54 44.75 200.39 43.68Q201.25 42.60 201.25 41.02Q201.25 40.48 201.00 39.67L181.54 39.67Q181.32 40.26 181.32 40.80Q181.32 42.43 182.19 43.55Q183.06 44.68 184.41 45.25Q185.77 45.83 187.26 45.83L187.26 48.12L166.77 48.12M183.33 36.28L199.54 36.28Q199.02 35.30 198.34 34.02Q197.66 32.74 196.73 31.10Q195.80 29.47 194.64 27.44Q193.48 25.42 192.02 22.92Q190.36 25.44 188.99 27.49Q187.62 29.54 186.55 31.20Q185.50 32.84 184.69 34.08Q183.89 35.33 183.33 36.28ZM245.17 48.12L245.17 45.48Q246.68 45.48 248.44 44.35Q250.20 43.21 252.93 40.50Q253.91 39.58 255.07 38.37Q256.23 37.16 257.59 35.69Q260.30 32.76 263.98 28.70Q267.65 24.63 272.53 19.17Q270.36 19.19 268.43 19.23Q266.50 19.26 264.84 19.36Q261.50 19.53 259.02 19.92Q256.54 20.31 254.86 21.02Q253.20 21.70 252.12 22.80Q251.10 23.88 250.65 25.40Q250.20 26.93 250.20 28.98L249.83 28.98L249.02 29.00L247.85 29.00L247.85 16.60L308.11 16.60L308.11 18.90Q306.49 18.90 304.90 20.12Q303.30 21.34 300.88 23.95Q299.12 25.88 296.57 28.82Q294.02 31.76 290.45 35.84Q288.67 37.87 286.56 40.25Q284.45 42.63 282.01 45.36Q288.50 45.29 293.07 44.89Q297.63 44.48 300.48 43.48Q303.32 42.48 304.63 40.61Q305.93 38.75 305.93 35.74L307.08 35.74L308.20 35.72L308.20 48.12L245.17 48.12ZM312.23 48.12L312.23 45.83Q317.11 45.65 319.85 44.35Q322.58 43.04 323.69 40.04Q324.80 37.04 324.80 31.81Q324.80 27.95 324.13 25.38Q323.46 22.80 321.90 21.34Q320.87 20.41 319.48 19.87Q318.09 19.34 316.28 19.12Q314.48 18.90 312.23 18.90L312.23 16.60L380.42 16.60Q381.05 19.68 381.36 23.29Q381.67 26.90 381.67 29.83L379.10 29.83Q377.47 27.39 374.32 25.39Q371.17 23.39 367.16 21.97Q363.16 20.53 358.79 19.78Q354.42 19.02 350.20 19.02L350.20 31.37Q351.56 30.98 353.86 30.05Q356.15 29.13 358.86 27.88Q361.55 26.64 363.43 25.68Q365.31 24.73 365.89 24.32Q366.31 26.15 366.43 28.58Q366.55 31.01 366.55 32.84Q366.55 34.59 366.39 36.88Q366.24 39.16 365.89 40.67Q365.26 40.28 363.31 39.29Q361.35 38.31 358.76 37.11Q356.30 35.99 353.97 35.01Q351.64 34.03 350.20 33.64L350.20 45.70Q354.30 45.70 359.23 44.86Q364.16 44.02 368.95 42.53Q372.00 41.55 374.63 40.34Q377.27 39.14 379.15 37.74Q381.03 36.35 381.79 34.89L384.35 34.89Q384.35 37.82 384.05 41.43Q383.74 45.04 383.11 48.12L312.23 48.12Z\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n    </svg>\r\n    <div\r\n      ref=\"leftCurtain\"\r\n      class=\"absolute left-0 top-0 h-full w-1/2 bg-yellow-500 z-[100]\"\r\n    ></div>\r\n    <div\r\n      ref=\"rightCurtain\"\r\n      class=\"absolute right-0 top-0 h-full w-1/2 bg-yellow-500 z-[100]\"\r\n    ></div>\r\n  </div>\r\n</template>\r\n"],"mappings":";;;;;;;;;;;;;AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,IAAI,QAAQ,MAAM;;;;IAE3B,MAAMC,MAAM,GAAGH,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMI,OAAO,GAAGJ,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMK,WAAW,GAAGL,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMM,YAAY,GAAGN,GAAG,CAAC,IAAI,CAAC;IAE9BC,SAAS,CAAC,MAAM;MACd,MAAMM,IAAI,GAAGJ,MAAM,CAACK,KAAK;;MAEzB;MACA,IAAI,CAACD,IAAI,EAAE;;MAEX;MACA,MAAME,MAAM,GAAGF,IAAI,CAACG,cAAc,CAAC,CAAC;MACpCR,IAAI,CAACS,GAAG,CAACJ,IAAI,EAAE;QACbK,eAAe,EAAEH,MAAM;QACvBI,gBAAgB,EAAEJ,MAAM;QACxBK,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,MAAMC,EAAE,GAAGb,IAAI,CAACc,QAAQ,CAAC;QACvBC,QAAQ,EAAE;UAAEC,IAAI,EAAE;QAAe;MACnC,CAAC,CAAC;MACF;MACA;MACAH,EAAE,CAACI,EAAE,CAACd,WAAW,CAACG,KAAK,EAAE;QACvBY,CAAC,EAAE,OAAO;QACVC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACCF,EAAE,CACDb,YAAY,CAACE,KAAK,EAClB;QACEY,CAAC,EAAE,MAAM;QACTC,QAAQ,EAAE;MACZ,CAAC,EACD,GAAG,CAAC;MACN;MACA;MAAA,CACCF,EAAE,CAACZ,IAAI,EAAE;QACRM,gBAAgB,EAAE,CAAC;QACnBQ,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE,CAAC,GAAG;QACXR,OAAO,EAAE,CAAC;QACVI,IAAI,EAAE,cAAc;QACpBK,UAAU,EAAEA,CAAA,KAAM;UAChB;UACAnB,OAAO,CAACI,KAAK,GAAG,KAAK;QACvB;MACF,CAAC,CAAC;IACN,CAAC,CAAC;;aCIQJ,OAAA,CAAAI,KAAO,I,cADfgB,mBAAA,CA4BM,OA5BNC,UA4BM,I,cAxBJD,mBAAA,CAeM,OAfNE,UAeM,GANJC,mBAAA,CAKE;iBAJI,QAAQ;QAAZ3B,GAAG,EAACG,MAAQ;QACZyB,CAAC,EAAC,6gIAA6gI;QAC/gI,gBAAc,EAAC,OAAO;QACtB,iBAAe,EAAC;wBAGpBD,mBAAA,CAGO;iBAFD,aAAa;QAAjB3B,GAAG,EAACK,WAAa;QACjBwB,KAAK,EAAC;qBAERF,mBAAA,CAGO;iBAFD,cAAc;QAAlB3B,GAAG,EAACM,YAAc;QAClBuB,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}