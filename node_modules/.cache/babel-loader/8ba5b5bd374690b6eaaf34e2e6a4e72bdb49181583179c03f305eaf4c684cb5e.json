{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, Suspense as _Suspense, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex-grow\"\n};\nimport GlobalHeader from \"@/components/HeaderComponent.vue\";\nimport GlobalFooter from \"@/components/FooterComponent.vue\";\nimport ScrollToTop from \"@/components/ScrollToTop.vue\";\nimport SplashScreen from \"@/components/SplashScreen.vue\";\nimport { useDarkMode } from \"@/composables/useDarkMode\";\nimport { ref, onMounted } from \"vue\";\nimport AnimatedCursor from \"./components/AnimatedCursor.vue\";\nexport default {\n  __name: 'App',\n  setup(__props) {\n    const {\n      isDark\n    } = useDarkMode();\n    const splashVisible = ref(true);\n    onMounted(() => {\n      // Allow the splash screen to complete its animation\n      setTimeout(() => {\n        splashVisible.value = false;\n      }, 5000); // Match with SplashScreen animation timing\n    });\n    return (_ctx, _cache) => {\n      const _component_router_view = _resolveComponent(\"router-view\");\n      return _openBlock(), _createBlock(_Suspense, null, {\n        default: _withCtx(() => [splashVisible.value ? (_openBlock(), _createBlock(SplashScreen, {\n          key: 0\n        })) : (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: _normalizeClass(['min-h-screen flex flex-col transition-colors duration-700 ease-in-out', _unref(isDark) ? 'bg-zinc-900 text-white' : 'bg-white text-black'])\n        }, [_createVNode(AnimatedCursor), _createVNode(GlobalHeader), _createElementVNode(\"main\", _hoisted_1, [_createVNode(_component_router_view), _createVNode(ScrollToTop)]), _createVNode(GlobalFooter)], 2))]),\n        _: 1\n      });\n    };\n  }\n};","map":{"version":3,"names":["GlobalHeader","GlobalFooter","ScrollToTop","SplashScreen","useDarkMode","ref","onMounted","AnimatedCursor","isDark","splashVisible","setTimeout","value","_createBlock","_Suspense","key","_createElementBlock","class","_normalizeClass","_unref","_createVNode","_createElementVNode","_hoisted_1","_component_router_view"],"sources":["C:/projects/Amaze Web/src/App.vue","C:\\projects\\Amaze Web\\src\\App.vue"],"sourcesContent":["<script setup>\r\nimport GlobalHeader from \"@/components/HeaderComponent.vue\";\r\nimport GlobalFooter from \"@/components/FooterComponent.vue\";\r\nimport ScrollToTop from \"@/components/ScrollToTop.vue\";\r\nimport SplashScreen from \"@/components/SplashScreen.vue\";\r\nimport { useDarkMode } from \"@/composables/useDarkMode\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport AnimatedCursor from \"./components/AnimatedCursor.vue\";\r\n\r\nconst { isDark } = useDarkMode();\r\nconst splashVisible = ref(true);\r\n\r\nonMounted(() => {\r\n  // Allow the splash screen to complete its animation\r\n  setTimeout(() => {\r\n    splashVisible.value = false;\r\n  }, 5000); // Match with SplashScreen animation timing\r\n});\r\n</script>\r\n\r\n<template>\r\n  <Suspense>\r\n    <SplashScreen v-if=\"splashVisible\" />\r\n\r\n    <div\r\n      v-else\r\n      :class=\"[\r\n        'min-h-screen flex flex-col transition-colors duration-700 ease-in-out',\r\n        isDark ? 'bg-zinc-900 text-white' : 'bg-white text-black',\r\n      ]\"\r\n    >\r\n      <AnimatedCursor />\r\n      <GlobalHeader />\r\n      <main class=\"flex-grow\">\r\n        <router-view />\r\n        <ScrollToTop />\r\n      </main>\r\n      <GlobalFooter />\r\n    </div>\r\n  </Suspense>\r\n</template>\r\n<style>\r\n/* Global scrollbar styles */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n  height: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #000000; /* black background */\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: #ffd500; /* yellow thumb */\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Firefox support */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #ffd500 #000000;\r\n}\r\n</style>\r\n","<script setup>\r\nimport GlobalHeader from \"@/components/HeaderComponent.vue\";\r\nimport GlobalFooter from \"@/components/FooterComponent.vue\";\r\nimport ScrollToTop from \"@/components/ScrollToTop.vue\";\r\nimport SplashScreen from \"@/components/SplashScreen.vue\";\r\nimport { useDarkMode } from \"@/composables/useDarkMode\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport AnimatedCursor from \"./components/AnimatedCursor.vue\";\r\n\r\nconst { isDark } = useDarkMode();\r\nconst splashVisible = ref(true);\r\n\r\nonMounted(() => {\r\n  // Allow the splash screen to complete its animation\r\n  setTimeout(() => {\r\n    splashVisible.value = false;\r\n  }, 5000); // Match with SplashScreen animation timing\r\n});\r\n</script>\r\n\r\n<template>\r\n  <Suspense>\r\n    <SplashScreen v-if=\"splashVisible\" />\r\n\r\n    <div\r\n      v-else\r\n      :class=\"[\r\n        'min-h-screen flex flex-col transition-colors duration-700 ease-in-out',\r\n        isDark ? 'bg-zinc-900 text-white' : 'bg-white text-black',\r\n      ]\"\r\n    >\r\n      <AnimatedCursor />\r\n      <GlobalHeader />\r\n      <main class=\"flex-grow\">\r\n        <router-view />\r\n        <ScrollToTop />\r\n      </main>\r\n      <GlobalFooter />\r\n    </div>\r\n  </Suspense>\r\n</template>\r\n<style>\r\n/* Global scrollbar styles */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n  height: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #000000; /* black background */\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: #ffd500; /* yellow thumb */\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Firefox support */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #ffd500 #000000;\r\n}\r\n</style>\r\n"],"mappings":";;;;AACA,OAAOA,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,cAAc,MAAM,iCAAiC;;;;IAE5D,MAAM;MAAEC;IAAO,CAAC,GAAGJ,WAAW,CAAC,CAAC;IAChC,MAAMK,aAAa,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAE/BC,SAAS,CAAC,MAAM;MACd;MACAI,UAAU,CAAC,MAAM;QACfD,aAAa,CAACE,KAAK,GAAG,KAAK;MAC7B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC;;;2BCIAC,YAAA,CAkBWC,SAAA;0BAjBT,MAAqC,CAAjBJ,aAAA,CAAAE,KAAa,I,cAAjCC,YAAA,CAAqCT,YAAA;UAAAW,GAAA;QAAA,O,cAErCC,mBAAA,CAcM;;UAZHC,KAAK,EAAAC,eAAA,E,yEAA+FC,MAAA,CAAAV,MAAA,CAAM,oD;YAK3GW,YAAA,CAAkBZ,cAAA,GAClBY,YAAA,CAAgBnB,YAAA,GAChBoB,mBAAA,CAGO,QAHPC,UAGO,GAFLF,YAAA,CAAeG,sBAAA,GACfH,YAAA,CAAejB,WAAA,E,GAEjBiB,YAAA,CAAgBlB,YAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}